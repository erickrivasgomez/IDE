/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO = 6;
  /** RegularExpression Id. */
  int RETURN = 7;
  /** RegularExpression Id. */
  int IF = 8;
  /** RegularExpression Id. */
  int ELSE = 9;
  /** RegularExpression Id. */
  int VERDAD = 10;
  /** RegularExpression Id. */
  int FALSO = 11;
  /** RegularExpression Id. */
  int APOSTRO = 12;
  /** RegularExpression Id. */
  int EQ = 13;
  /** RegularExpression Id. */
  int DIF = 14;
  /** RegularExpression Id. */
  int MAYIG = 15;
  /** RegularExpression Id. */
  int MENIG = 16;
  /** RegularExpression Id. */
  int MAY = 17;
  /** RegularExpression Id. */
  int MEN = 18;
  /** RegularExpression Id. */
  int INT = 19;
  /** RegularExpression Id. */
  int CAR = 20;
  /** RegularExpression Id. */
  int BOOL = 21;
  /** RegularExpression Id. */
  int FUNCTION = 22;
  /** RegularExpression Id. */
  int USE = 23;
  /** RegularExpression Id. */
  int DEF = 24;
  /** RegularExpression Id. */
  int ENCABEZADO = 25;
  /** RegularExpression Id. */
  int BREAK = 26;
  /** RegularExpression Id. */
  int DEFA = 27;
  /** RegularExpression Id. */
  int AND = 28;
  /** RegularExpression Id. */
  int OR = 29;
  /** RegularExpression Id. */
  int NEGACION = 30;
  /** RegularExpression Id. */
  int LEFTSHIFT = 31;
  /** RegularExpression Id. */
  int RIGHTSHIFT = 32;
  /** RegularExpression Id. */
  int DELAY = 33;
  /** RegularExpression Id. */
  int SUMA = 34;
  /** RegularExpression Id. */
  int RESTA = 35;
  /** RegularExpression Id. */
  int MULT = 36;
  /** RegularExpression Id. */
  int DIVISION = 37;
  /** RegularExpression Id. */
  int IGUALDAD = 38;
  /** RegularExpression Id. */
  int MAIN = 39;
  /** RegularExpression Id. */
  int PAR1 = 40;
  /** RegularExpression Id. */
  int PAR2 = 41;
  /** RegularExpression Id. */
  int LLA1 = 42;
  /** RegularExpression Id. */
  int LLA2 = 43;
  /** RegularExpression Id. */
  int COR1 = 44;
  /** RegularExpression Id. */
  int COR2 = 45;
  /** RegularExpression Id. */
  int COMILLAS = 46;
  /** RegularExpression Id. */
  int WHILE = 47;
  /** RegularExpression Id. */
  int OUT = 48;
  /** RegularExpression Id. */
  int DOSPUNTOS = 49;
  /** RegularExpression Id. */
  int PUNTOCOMA = 50;
  /** RegularExpression Id. */
  int COMA = 51;
  /** RegularExpression Id. */
  int DDR = 52;
  /** RegularExpression Id. */
  int VALORBINARIO = 53;
  /** RegularExpression Id. */
  int PORT = 54;
  /** RegularExpression Id. */
  int PIN = 55;
  /** RegularExpression Id. */
  int PB = 56;
  /** RegularExpression Id. */
  int CARACTER = 57;
  /** RegularExpression Id. */
  int FLOT = 58;
  /** RegularExpression Id. */
  int NUM = 59;
  /** RegularExpression Id. */
  int CAD = 60;
  /** RegularExpression Id. */
  int MM = 61;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"b \\u00c2\\u00af& \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "<COMENTARIO>",
    "\"return\"",
    "\"if\"",
    "\"else\"",
    "\"true\"",
    "\"false\"",
    "\"\\\'\"",
    "\"==\"",
    "\"!=\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\"int\"",
    "\"char\"",
    "\"boolean\"",
    "\"function\"",
    "\"use\"",
    "\"def\"",
    "<ENCABEZADO>",
    "\"break\"",
    "\"default\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "\"<<\"",
    "\">>\"",
    "\"delay\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"main(void)\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"\\\"\"",
    "\"while\"",
    "\"out\"",
    "\":\"",
    "\";\"",
    "\",\"",
    "<DDR>",
    "<VALORBINARIO>",
    "<PORT>",
    "<PIN>",
    "<PB>",
    "<CARACTER>",
    "<FLOT>",
    "<NUM>",
    "<CAD>",
    "\"++\"",
  };

}
