eererierickerickrririvrivarivasrivas rivas grivas gorivas gomrivas gomerivas gomezerivas gomezerrivas gomezeririvas gomezericrivas gomezerickrivas gomezerick rivas gomez
erick rivas gomez

erick rivas gomez


erick rivas gomez



erick rivas gomez





	int a = 4;
	int c = 0;
	f = 9;

	if (a==0){
		int c = 9;
	}

switch (a) {
	case 8:
		int b = 0;
		boolean e = false;
		break;
	case 4:
		int b = 1;
		boolean e = false;
		break;
	default:
	 break;
}

	int a = 4;
	int c = 0;
	f = 9;

	if (a==0){
		int c = 9;
	}

switch (a) {
	case 8:
		int b = 0;
		boolean e = false;
		break;
	case 4:
		int b = 1;
		boolean e = false;
		break;
	default:
	 break;
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
    <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<"> 
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FLOTANTE: "float">
    | <FUNCTION: "function">
    | <ENCABEZADO: "use "(["a"-"z","A"-"Z","_","-"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    }

TOKEN [IGNORE_CASE] : {

     <SUMA: "+">
    |<RESTA: "-">
    |<MULT: "*">
    |<DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <DO: "do">
    | <FOR: "for">
    | <IF: ("if")>
    | <ELSE: "else">
    | <SWITCH: "switch">
    | <CASE: "case">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
    | <INC: (<CAD><MM>|<MM><CAD>)>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (mientras()|si()|declaracion()|por()|funcion()|header()|operaciones()|switchcase()|asignacion())+|nada()
	//(mientras()|si()|entero()|siono()|flotant()|por())+|nada()
}

void header() :{}{
    <ENCABEZADO>{System.out.println("Encabezado");}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");}
    |<FLOTANTE>{System.out.print("Flotante");})
}

void mientras() :{}{
{System.out.print("Entrada a ciclo ");}(<DO>{{System.out.print("DO ");}}{System.out.println("WHILE");}<LLA1>(producciones())<LLA2>)?<WHILE>cond()(<LLA1>(producciones())<LLA2>)?{System.out.println("Salida de ciclo WHILE");}    
}

void si() :{}{ 
    {System.out.println("Entra a IF");}
    <IF>cond()<LLA1>(producciones())<LLA2>{System.out.println("Salida de IF.");}(sino())?
}

void cond() : {Token actual; Object variable=null; Object compara=null; String signo="";}{
    <PAR1>((actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);System.out.println(variable);}|actual = <NUM>{variable = actual.image;System.out.println(variable);})(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
                )
            (actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");System.out.println(compara);}|actual = <NUM>{compara = actual.image;System.out.println(compara);})
            {evaluarIF(variable, compara, signo);}
            |("1"{System.out.println("true");}
            |<VERDAD>{System.out.println("true");}))
    <PAR2>
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        switch (signo){
            case "<":
                System.out.print("("+variable+"<"+compara+")");
                if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case ">":
                System.out.print("("+variable+">"+compara+")");
                if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case "==":
                System.out.print("("+variable+"=="+compara+")");
                if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void por() :{}{
{System.out.println("Entrada a ciclo FOR.");}<FOR><PAR1>declaracion()porcond()<PUNTOCOMA><INC><PAR2>(<LLA1>(producciones())<LLA2>)
{System.out.println("Salida de ciclo FOR.");}    
}

void porcond() :{}{
    ((<CAD>|<NUM>)(<EQ>|<DIF>|<MAYIG>|<MENIG>|<MAY>|<MEN>)(<CAD>|<NUM>)|<VERDAD>)
}

void nada() :{}{
    {System.out.println("");}
}

void declaracion() :{Token actual;String nombre;String tipo;Object valor="";}{
    {System.out.print("Declaracion: entero ");}
    <INT> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|{System.out.print(" = ");valor = operaciones();}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <CARACTER>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: flotante ");}
    <FLOTANTE> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <FLOT>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Float", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

int valor() :{Token actual; int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); return Integer.parseInt(actual.image);}
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> num = valor() {total -= num;})* {return total;}
}

void switchcase() : {Token actual; Object variable; Object compara;} {
	<SWITCH>{System.out.println("Entra a switch");}<PAR1>actual = <CAD> {System.out.println("Se compara: "+actual.image+"="+tabla.getValor(actual.image+""));variable = actual.image;variable = tabla.getValor(actual.image+"");}<PAR2><LLA1>(<CASE>(actual = <CAD>{compara = actual.image;}|actual = <FLOTANTE>{compara = actual.image;}|actual = <CARACTER>{compara = actual.image;}|actual = <NUM>{compara = actual.image;evaluarSwitch(variable, compara);})<DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>)+[<DEFA><DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>]<LLA2>
}

void evaluarSwitch(Object variable, Object compara):{} {
    {
        String uno, dos;
        uno = variable+"";
        dos = compara+"";
        System.out.print("\t("+variable+"=="+compara+")");
        if(uno.equals(dos)){
            System.out.println("true");
        }
        else {
            System.out.println("false");
        }
    }
}

void asignacion() : {Token actual;String nombre;Object valor=null;}{
    actual = <CAD>
    {
        System.out.print("Asignacion: "+actual.image+" = ");
        nombre = actual.image;
    }
    <IGUALDAD>(<CAD>|{valor = operaciones();})
    <PUNTOCOMA>
    {
        if(!tabla.buscarVariable(nombre)){
            tabla.setValor(nombre, valor);
        }else{
            System.out.print(" -----La varable no ha sido declarada");
        }        
        System.out.println("");
    }
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
    <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<"> 
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FLOTANTE: "float">
    | <FUNCTION: "function">
    | <ENCABEZADO: "use "(["a"-"z","A"-"Z","_","-"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    }

TOKEN [IGNORE_CASE] : {

     <SUMA: "+">
    |<RESTA: "-">
    |<MULT: "*">
    |<DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <DO: "do">
    | <FOR: "for">
    | <IF: ("if")>
    | <ELSE: "else">
    | <SWITCH: "switch">
    | <CASE: "case">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
    | <INC: (<CAD><MM>|<MM><CAD>)>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (mientras()|si()|declaracion()|por()|funcion()|header()|operaciones()|switchcase()|asignacion())+|nada()
	//(mientras()|si()|entero()|siono()|flotant()|por())+|nada()
}

void header() :{}{
    <ENCABEZADO>{System.out.println("Encabezado");}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");}
    |<FLOTANTE>{System.out.print("Flotante");})
}

void mientras() :{}{
{System.out.print("Entrada a ciclo ");}(<DO>{{System.out.print("DO ");}}{System.out.println("WHILE");}<LLA1>(producciones())<LLA2>)?<WHILE>cond()(<LLA1>(producciones())<LLA2>)?{System.out.println("Salida de ciclo WHILE");}    
}

void si() :{}{ 
    {System.out.println("Entra a IF");}
    <IF>cond()<LLA1>(producciones())<LLA2>{System.out.println("Salida de IF.");}(sino())?
}

void cond() : {Token actual; Object variable=null; Object compara=null; String signo="";}{
    <PAR1>((actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);System.out.println(variable);}|actual = <NUM>{variable = actual.image;System.out.println(variable);})(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
                )
            (actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");System.out.println(compara);}|actual = <NUM>{compara = actual.image;System.out.println(compara);})
            {evaluarIF(variable, compara, signo);}
            |("1"{System.out.println("true");}
            |<VERDAD>{System.out.println("true");}))
    <PAR2>
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        switch (signo){
            case "<":
                System.out.print("("+variable+"<"+compara+")");
                if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case ">":
                System.out.print("("+variable+">"+compara+")");
                if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case "==":
                System.out.print("("+variable+"=="+compara+")");
                if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void por() :{}{
{System.out.println("Entrada a ciclo FOR.");}<FOR><PAR1>declaracion()porcond()<PUNTOCOMA><INC><PAR2>(<LLA1>(producciones())<LLA2>)
{System.out.println("Salida de ciclo FOR.");}    
}

void porcond() :{}{
    ((<CAD>|<NUM>)(<EQ>|<DIF>|<MAYIG>|<MENIG>|<MAY>|<MEN>)(<CAD>|<NUM>)|<VERDAD>)
}

void nada() :{}{
    {System.out.println("");}
}

void declaracion() :{Token actual;String nombre;String tipo;Object valor="";}{
    {System.out.print("Declaracion: entero ");}
    <INT> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|{System.out.print(" = ");valor = operaciones();}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <CARACTER>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: flotante ");}
    <FLOTANTE> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <FLOT>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Float", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

int valor() :{Token actual; int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); return Integer.parseInt(actual.image);}
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> num = valor() {total -= num;})* {return total;}
}

void switchcase() : {Token actual; Object variable; Object compara;} {
	<SWITCH>{System.out.println("Entra a switch");}<PAR1>actual = <CAD> {System.out.println("Se compara: "+actual.image+"="+tabla.getValor(actual.image+""));variable = actual.image;variable = tabla.getValor(actual.image+"");}<PAR2><LLA1>(<CASE>(actual = <CAD>{compara = actual.image;}|actual = <FLOTANTE>{compara = actual.image;}|actual = <CARACTER>{compara = actual.image;}|actual = <NUM>{compara = actual.image;evaluarSwitch(variable, compara);})<DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>)+[<DEFA><DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>]<LLA2>
}

void evaluarSwitch(Object variable, Object compara):{} {
    {
        String uno, dos;
        uno = variable+"";
        dos = compara+"";
        System.out.print("\t("+variable+"=="+compara+")");
        if(uno.equals(dos)){
            System.out.println("true");
        }
        else {
            System.out.println("false");
        }
    }
}

void asignacion() : {Token actual;String nombre;Object valor=null;}{
    actual = <CAD>
    {
        System.out.print("Asignacion: "+actual.image+" = ");
        nombre = actual.image;
    }
    <IGUALDAD>(<CAD>|{valor = operaciones();})
    <PUNTOCOMA>
    {
        if(!tabla.buscarVariable(nombre)){
            tabla.setValor(nombre, valor);
        }else{
            System.out.print(" -----La varble no ha sido declarada");
        }        
        System.out.println("");
    }
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
    <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<"> 
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FLOTANTE: "float">
    | <FUNCTION: "function">
    | <ENCABEZADO: "use "(["a"-"z","A"-"Z","_","-"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    }

TOKEN [IGNORE_CASE] : {

     <SUMA: "+">
    |<RESTA: "-">
    |<MULT: "*">
    |<DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <DO: "do">
    | <FOR: "for">
    | <IF: ("if")>
    | <ELSE: "else">
    | <SWITCH: "switch">
    | <CASE: "case">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
    | <INC: (<CAD><MM>|<MM><CAD>)>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (mientras()|si()|declaracion()|por()|funcion()|header()|operaciones()|switchcase()|asignacion())+|nada()
	//(mientras()|si()|entero()|siono()|flotant()|por())+|nada()
}

void header() :{}{
    <ENCABEZADO>{System.out.println("Encabezado");}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");}
    |<FLOTANTE>{System.out.print("Flotante");})
}

void mientras() :{}{
{System.out.print("Entrada a ciclo ");}(<DO>{{System.out.print("DO ");}}{System.out.println("WHILE");}<LLA1>(producciones())<LLA2>)?<WHILE>cond()(<LLA1>(producciones())<LLA2>)?{System.out.println("Salida de ciclo WHILE");}    
}

void si() :{}{ 
    {System.out.println("Entra a IF");}
    <IF>cond()<LLA1>(producciones())<LLA2>{System.out.println("Salida de IF.");}(sino())?
}

void cond() : {Token actual; Object variable=null; Object compara=null; String signo="";}{
    <PAR1>((actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);System.out.println(variable);}|actual = <NUM>{variable = actual.image;System.out.println(variable);})(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
                )
            (actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");System.out.println(compara);}|actual = <NUM>{compara = actual.image;System.out.println(compara);})
            {evaluarIF(variable, compara, signo);}
            |("1"{System.out.println("true");}
            |<VERDAD>{System.out.println("true");}))
    <PAR2>
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        switch (signo){
            case "<":
                System.out.print("("+variable+"<"+compara+")");
                if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case ">":
                System.out.print("("+variable+">"+compara+")");
                if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case "==":
                System.out.print("("+variable+"=="+compara+")");
                if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void por() :{}{
{System.out.println("Entrada a ciclo FOR.");}<FOR><PAR1>declaracion()porcond()<PUNTOCOMA><INC><PAR2>(<LLA1>(producciones())<LLA2>)
{System.out.println("Salida de ciclo FOR.");}    
}

void porcond() :{}{
    ((<CAD>|<NUM>)(<EQ>|<DIF>|<MAYIG>|<MENIG>|<MAY>|<MEN>)(<CAD>|<NUM>)|<VERDAD>)
}

void nada() :{}{
    {System.out.println("");}
}

void declaracion() :{Token actual;String nombre;String tipo;Object valor="";}{
    {System.out.print("Declaracion: entero ");}
    <INT> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|{System.out.print(" = ");valor = operaciones();}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <CARACTER>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: flotante ");}
    <FLOTANTE> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <FLOT>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Float", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

int valor() :{Token actual; int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); return Integer.parseInt(actual.image);}
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> num = valor() {total -= num;})* {return total;}
}

void switchcase() : {Token actual; Object variable; Object compara;} {
	<SWITCH>{System.out.println("Entra a switch");}<PAR1>actual = <CAD> {System.out.println("Se compara: "+actual.image+"="+tabla.getValor(actual.image+""));variable = actual.image;variable = tabla.getValor(actual.image+"");}<PAR2><LLA1>(<CASE>(actual = <CAD>{compara = actual.image;}|actual = <FLOTANTE>{compara = actual.image;}|actual = <CARACTER>{compara = actual.image;}|actual = <NUM>{compara = actual.image;evaluarSwitch(variable, compara);})<DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>)+[<DEFA><DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>]<LLA2>
}

void evaluarSwitch(Object variable, Object compara):{} {
    {
        String uno, dos;
        uno = variable+"";
        dos = compara+"";
        System.out.print("\t("+variable+"=="+compara+")");
        if(uno.equals(dos)){
            System.out.println("true");
        }
        else {
            System.out.println("false");
        }
    }
}

void asignacion() : {Token actual;String nombre;Object valor=null;}{
    actual = <CAD>
    {
        System.out.print("Asignacion: "+actual.image+" = ");
        nombre = actual.image;
    }
    <IGUALDAD>(<CAD>|{valor = operaciones();})
    <PUNTOCOMA>
    {
        if(!tabla.buscarVariable(nombre)){
            tabla.setValor(nombre, valor);
        }else{
            System.out.print(" -----La varle no ha sido declarada");
        }        
        System.out.println("");
    }
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
    <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<"> 
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FLOTANTE: "float">
    | <FUNCTION: "function">
    | <ENCABEZADO: "use "(["a"-"z","A"-"Z","_","-"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    }

TOKEN [IGNORE_CASE] : {

     <SUMA: "+">
    |<RESTA: "-">
    |<MULT: "*">
    |<DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <DO: "do">
    | <FOR: "for">
    | <IF: ("if")>
    | <ELSE: "else">
    | <SWITCH: "switch">
    | <CASE: "case">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
    | <INC: (<CAD><MM>|<MM><CAD>)>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (mientras()|si()|declaracion()|por()|funcion()|header()|operaciones()|switchcase()|asignacion())+|nada()
	//(mientras()|si()|entero()|siono()|flotant()|por())+|nada()
}

void header() :{}{
    <ENCABEZADO>{System.out.println("Encabezado");}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");}
    |<FLOTANTE>{System.out.print("Flotante");})
}

void mientras() :{}{
{System.out.print("Entrada a ciclo ");}(<DO>{{System.out.print("DO ");}}{System.out.println("WHILE");}<LLA1>(producciones())<LLA2>)?<WHILE>cond()(<LLA1>(producciones())<LLA2>)?{System.out.println("Salida de ciclo WHILE");}    
}

void si() :{}{ 
    {System.out.println("Entra a IF");}
    <IF>cond()<LLA1>(producciones())<LLA2>{System.out.println("Salida de IF.");}(sino())?
}

void cond() : {Token actual; Object variable=null; Object compara=null; String signo="";}{
    <PAR1>((actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);System.out.println(variable);}|actual = <NUM>{variable = actual.image;System.out.println(variable);})(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
                )
            (actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");System.out.println(compara);}|actual = <NUM>{compara = actual.image;System.out.println(compara);})
            {evaluarIF(variable, compara, signo);}
            |("1"{System.out.println("true");}
            |<VERDAD>{System.out.println("true");}))
    <PAR2>
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        switch (signo){
            case "<":
                System.out.print("("+variable+"<"+compara+")");
                if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case ">":
                System.out.print("("+variable+">"+compara+")");
                if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case "==":
                System.out.print("("+variable+"=="+compara+")");
                if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void por() :{}{
{System.out.println("Entrada a ciclo FOR.");}<FOR><PAR1>declaracion()porcond()<PUNTOCOMA><INC><PAR2>(<LLA1>(producciones())<LLA2>)
{System.out.println("Salida de ciclo FOR.");}    
}

void porcond() :{}{
    ((<CAD>|<NUM>)(<EQ>|<DIF>|<MAYIG>|<MENIG>|<MAY>|<MEN>)(<CAD>|<NUM>)|<VERDAD>)
}

void nada() :{}{
    {System.out.println("");}
}

void declaracion() :{Token actual;String nombre;String tipo;Object valor="";}{
    {System.out.print("Declaracion: entero ");}
    <INT> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|{System.out.print(" = ");valor = operaciones();}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <CARACTER>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: flotante ");}
    <FLOTANTE> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <FLOT>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Float", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

int valor() :{Token actual; int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); return Integer.parseInt(actual.image);}
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> num = valor() {total -= num;})* {return total;}
}

void switchcase() : {Token actual; Object variable; Object compara;} {
	<SWITCH>{System.out.println("Entra a switch");}<PAR1>actual = <CAD> {System.out.println("Se compara: "+actual.image+"="+tabla.getValor(actual.image+""));variable = actual.image;variable = tabla.getValor(actual.image+"");}<PAR2><LLA1>(<CASE>(actual = <CAD>{compara = actual.image;}|actual = <FLOTANTE>{compara = actual.image;}|actual = <CARACTER>{compara = actual.image;}|actual = <NUM>{compara = actual.image;evaluarSwitch(variable, compara);})<DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>)+[<DEFA><DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>]<LLA2>
}

void evaluarSwitch(Object variable, Object compara):{} {
    {
        String uno, dos;
        uno = variable+"";
        dos = compara+"";
        System.out.print("\t("+variable+"=="+compara+")");
        if(uno.equals(dos)){
            System.out.println("true");
        }
        else {
            System.out.println("false");
        }
    }
}

void asignacion() : {Token actual;String nombre;Object valor=null;}{
    actual = <CAD>
    {
        System.out.print("Asignacion: "+actual.image+" = ");
        nombre = actual.image;
    }
    <IGUALDAD>(<CAD>|{valor = operaciones();})
    <PUNTOCOMA>
    {
        if(!tabla.buscarVariable(nombre)){
            tabla.setValor(nombre, valor);
        }else{
            System.out.print(" -----La vare no ha sido declarada");
        }        
        System.out.println("");
    }
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
    <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<"> 
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FLOTANTE: "float">
    | <FUNCTION: "function">
    | <ENCABEZADO: "use "(["a"-"z","A"-"Z","_","-"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    }

TOKEN [IGNORE_CASE] : {

     <SUMA: "+">
    |<RESTA: "-">
    |<MULT: "*">
    |<DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <DO: "do">
    | <FOR: "for">
    | <IF: ("if")>
    | <ELSE: "else">
    | <SWITCH: "switch">
    | <CASE: "case">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
    | <INC: (<CAD><MM>|<MM><CAD>)>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (mientras()|si()|declaracion()|por()|funcion()|header()|operaciones()|switchcase()|asignacion())+|nada()
	//(mientras()|si()|entero()|siono()|flotant()|por())+|nada()
}

void header() :{}{
    <ENCABEZADO>{System.out.println("Encabezado");}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");}
    |<FLOTANTE>{System.out.print("Flotante");})
}

void mientras() :{}{
{System.out.print("Entrada a ciclo ");}(<DO>{{System.out.print("DO ");}}{System.out.println("WHILE");}<LLA1>(producciones())<LLA2>)?<WHILE>cond()(<LLA1>(producciones())<LLA2>)?{System.out.println("Salida de ciclo WHILE");}    
}

void si() :{}{ 
    {System.out.println("Entra a IF");}
    <IF>cond()<LLA1>(producciones())<LLA2>{System.out.println("Salida de IF.");}(sino())?
}

void cond() : {Token actual; Object variable=null; Object compara=null; String signo="";}{
    <PAR1>((actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);System.out.println(variable);}|actual = <NUM>{variable = actual.image;System.out.println(variable);})(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
                )
            (actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");System.out.println(compara);}|actual = <NUM>{compara = actual.image;System.out.println(compara);})
            {evaluarIF(variable, compara, signo);}
            |("1"{System.out.println("true");}
            |<VERDAD>{System.out.println("true");}))
    <PAR2>
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        switch (signo){
            case "<":
                System.out.print("("+variable+"<"+compara+")");
                if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case ">":
                System.out.print("("+variable+">"+compara+")");
                if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case "==":
                System.out.print("("+variable+"=="+compara+")");
                if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void por() :{}{
{System.out.println("Entrada a ciclo FOR.");}<FOR><PAR1>declaracion()porcond()<PUNTOCOMA><INC><PAR2>(<LLA1>(producciones())<LLA2>)
{System.out.println("Salida de ciclo FOR.");}    
}

void porcond() :{}{
    ((<CAD>|<NUM>)(<EQ>|<DIF>|<MAYIG>|<MENIG>|<MAY>|<MEN>)(<CAD>|<NUM>)|<VERDAD>)
}

void nada() :{}{
    {System.out.println("");}
}

void declaracion() :{Token actual;String nombre;String tipo;Object valor="";}{
    {System.out.print("Declaracion: entero ");}
    <INT> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|{System.out.print(" = ");valor = operaciones();}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <CARACTER>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: flotante ");}
    <FLOTANTE> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <FLOT>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Float", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

int valor() :{Token actual; int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); return Integer.parseInt(actual.image);}
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> num = valor() {total -= num;})* {return total;}
}

void switchcase() : {Token actual; Object variable; Object compara;} {
	<SWITCH>{System.out.println("Entra a switch");}<PAR1>actual = <CAD> {System.out.println("Se compara: "+actual.image+"="+tabla.getValor(actual.image+""));variable = actual.image;variable = tabla.getValor(actual.image+"");}<PAR2><LLA1>(<CASE>(actual = <CAD>{compara = actual.image;}|actual = <FLOTANTE>{compara = actual.image;}|actual = <CARACTER>{compara = actual.image;}|actual = <NUM>{compara = actual.image;evaluarSwitch(variable, compara);})<DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>)+[<DEFA><DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>]<LLA2>
}

void evaluarSwitch(Object variable, Object compara):{} {
    {
        String uno, dos;
        uno = variable+"";
        dos = compara+"";
        System.out.print("\t("+variable+"=="+compara+")");
        if(uno.equals(dos)){
            System.out.println("true");
        }
        else {
            System.out.println("false");
        }
    }
}

void asignacion() : {Token actual;String nombre;Object valor=null;}{
    actual = <CAD>
    {
        System.out.print("Asignacion: "+actual.image+" = ");
        nombre = actual.image;
    }
    <IGUALDAD>(<CAD>|{valor = operaciones();})
    <PUNTOCOMA>
    {
        if(!tabla.buscarVariable(nombre)){
            tabla.setValor(nombre, valor);
        }else{
            System.out.print(" -----La var no ha sido declarada");
        }        
        System.out.println("");
    }
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
    <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<"> 
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FLOTANTE: "float">
    | <FUNCTION: "function">
    | <ENCABEZADO: "use "(["a"-"z","A"-"Z","_","-"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    }

TOKEN [IGNORE_CASE] : {

     <SUMA: "+">
    |<RESTA: "-">
    |<MULT: "*">
    |<DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <DO: "do">
    | <FOR: "for">
    | <IF: ("if")>
    | <ELSE: "else">
    | <SWITCH: "switch">
    | <CASE: "case">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
    | <INC: (<CAD><MM>|<MM><CAD>)>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (mientras()|si()|declaracion()|por()|funcion()|header()|operaciones()|switchcase()|asignacion())+|nada()
	//(mientras()|si()|entero()|siono()|flotant()|por())+|nada()
}

void header() :{}{
    <ENCABEZADO>{System.out.println("Encabezado");}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");}
    |<FLOTANTE>{System.out.print("Flotante");})
}

void mientras() :{}{
{System.out.print("Entrada a ciclo ");}(<DO>{{System.out.print("DO ");}}{System.out.println("WHILE");}<LLA1>(producciones())<LLA2>)?<WHILE>cond()(<LLA1>(producciones())<LLA2>)?{System.out.println("Salida de ciclo WHILE");}    
}

void si() :{}{ 
    {System.out.println("Entra a IF");}
    <IF>cond()<LLA1>(producciones())<LLA2>{System.out.println("Salida de IF.");}(sino())?
}

void cond() : {Token actual; Object variable=null; Object compara=null; String signo="";}{
    <PAR1>((actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);System.out.println(variable);}|actual = <NUM>{variable = actual.image;System.out.println(variable);})(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
                )
            (actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");System.out.println(compara);}|actual = <NUM>{compara = actual.image;System.out.println(compara);})
            {evaluarIF(variable, compara, signo);}
            |("1"{System.out.println("true");}
            |<VERDAD>{System.out.println("true");}))
    <PAR2>
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        switch (signo){
            case "<":
                System.out.print("("+variable+"<"+compara+")");
                if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case ">":
                System.out.print("("+variable+">"+compara+")");
                if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case "==":
                System.out.print("("+variable+"=="+compara+")");
                if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void por() :{}{
{System.out.println("Entrada a ciclo FOR.");}<FOR><PAR1>declaracion()porcond()<PUNTOCOMA><INC><PAR2>(<LLA1>(producciones())<LLA2>)
{System.out.println("Salida de ciclo FOR.");}    
}

void porcond() :{}{
    ((<CAD>|<NUM>)(<EQ>|<DIF>|<MAYIG>|<MENIG>|<MAY>|<MEN>)(<CAD>|<NUM>)|<VERDAD>)
}

void nada() :{}{
    {System.out.println("");}
}

void declaracion() :{Token actual;String nombre;String tipo;Object valor="";}{
    {System.out.print("Declaracion: entero ");}
    <INT> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|{System.out.print(" = ");valor = operaciones();}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <CARACTER>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: flotante ");}
    <FLOTANTE> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <FLOT>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Float", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

int valor() :{Token actual; int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); return Integer.parseInt(actual.image);}
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> num = valor() {total -= num;})* {return total;}
}

void switchcase() : {Token actual; Object variable; Object compara;} {
	<SWITCH>{System.out.println("Entra a switch");}<PAR1>actual = <CAD> {System.out.println("Se compara: "+actual.image+"="+tabla.getValor(actual.image+""));variable = actual.image;variable = tabla.getValor(actual.image+"");}<PAR2><LLA1>(<CASE>(actual = <CAD>{compara = actual.image;}|actual = <FLOTANTE>{compara = actual.image;}|actual = <CARACTER>{compara = actual.image;}|actual = <NUM>{compara = actual.image;evaluarSwitch(variable, compara);})<DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>)+[<DEFA><DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>]<LLA2>
}

void evaluarSwitch(Object variable, Object compara):{} {
    {
        String uno, dos;
        uno = variable+"";
        dos = compara+"";
        System.out.print("\t("+variable+"=="+compara+")");
        if(uno.equals(dos)){
            System.out.println("true");
        }
        else {
            System.out.println("false");
        }
    }
}

void asignacion() : {Token actual;String nombre;Object valor=null;}{
    actual = <CAD>
    {
        System.out.print("Asignacion: "+actual.image+" = ");
        nombre = actual.image;
    }
    <IGUALDAD>(<CAD>|{valor = operaciones();})
    <PUNTOCOMA>
    {
        if(!tabla.buscarVariable(nombre)){
            tabla.setValor(nombre, valor);
        }else{
            System.out.print(" -----La varno ha sido declarada");
        }        
        System.out.println("");
    }
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
    <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<"> 
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FLOTANTE: "float">
    | <FUNCTION: "function">
    | <ENCABEZADO: "use "(["a"-"z","A"-"Z","_","-"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    }

TOKEN [IGNORE_CASE] : {

     <SUMA: "+">
    |<RESTA: "-">
    |<MULT: "*">
    |<DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <DO: "do">
    | <FOR: "for">
    | <IF: ("if")>
    | <ELSE: "else">
    | <SWITCH: "switch">
    | <CASE: "case">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
    | <INC: (<CAD><MM>|<MM><CAD>)>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (mientras()|si()|declaracion()|por()|funcion()|header()|operaciones()|switchcase()|asignacion())+|nada()
	//(mientras()|si()|entero()|siono()|flotant()|por())+|nada()
}

void header() :{}{
    <ENCABEZADO>{System.out.println("Encabezado");}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");}
    |<FLOTANTE>{System.out.print("Flotante");})
}

void mientras() :{}{
{System.out.print("Entrada a ciclo ");}(<DO>{{System.out.print("DO ");}}{System.out.println("WHILE");}<LLA1>(producciones())<LLA2>)?<WHILE>cond()(<LLA1>(producciones())<LLA2>)?{System.out.println("Salida de ciclo WHILE");}    
}

void si() :{}{ 
    {System.out.println("Entra a IF");}
    <IF>cond()<LLA1>(producciones())<LLA2>{System.out.println("Salida de IF.");}(sino())?
}

void cond() : {Token actual; Object variable=null; Object compara=null; String signo="";}{
    <PAR1>((actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);System.out.println(variable);}|actual = <NUM>{variable = actual.image;System.out.println(variable);})(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
                )
            (actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");System.out.println(compara);}|actual = <NUM>{compara = actual.image;System.out.println(compara);})
            {evaluarIF(variable, compara, signo);}
            |("1"{System.out.println("true");}
            |<VERDAD>{System.out.println("true");}))
    <PAR2>
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        switch (signo){
            case "<":
                System.out.print("("+variable+"<"+compara+")");
                if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case ">":
                System.out.print("("+variable+">"+compara+")");
                if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case "==":
                System.out.print("("+variable+"=="+compara+")");
                if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void por() :{}{
{System.out.println("Entrada a ciclo FOR.");}<FOR><PAR1>declaracion()porcond()<PUNTOCOMA><INC><PAR2>(<LLA1>(producciones())<LLA2>)
{System.out.println("Salida de ciclo FOR.");}    
}

void porcond() :{}{
    ((<CAD>|<NUM>)(<EQ>|<DIF>|<MAYIG>|<MENIG>|<MAY>|<MEN>)(<CAD>|<NUM>)|<VERDAD>)
}

void nada() :{}{
    {System.out.println("");}
}

void declaracion() :{Token actual;String nombre;String tipo;Object valor="";}{
    {System.out.print("Declaracion: entero ");}
    <INT> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|{System.out.print(" = ");valor = operaciones();}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <CARACTER>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: flotante ");}
    <FLOTANTE> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <FLOT>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Float", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

int valor() :{Token actual; int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); return Integer.parseInt(actual.image);}
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> num = valor() {total -= num;})* {return total;}
}

void switchcase() : {Token actual; Object variable; Object compara;} {
	<SWITCH>{System.out.println("Entra a switch");}<PAR1>actual = <CAD> {System.out.println("Se compara: "+actual.image+"="+tabla.getValor(actual.image+""));variable = actual.image;variable = tabla.getValor(actual.image+"");}<PAR2><LLA1>(<CASE>(actual = <CAD>{compara = actual.image;}|actual = <FLOTANTE>{compara = actual.image;}|actual = <CARACTER>{compara = actual.image;}|actual = <NUM>{compara = actual.image;evaluarSwitch(variable, compara);})<DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>)+[<DEFA><DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>]<LLA2>
}

void evaluarSwitch(Object variable, Object compara):{} {
    {
        String uno, dos;
        uno = variable+"";
        dos = compara+"";
        System.out.print("\t("+variable+"=="+compara+")");
        if(uno.equals(dos)){
            System.out.println("true");
        }
        else {
            System.out.println("false");
        }
    }
}

void asignacion() : {Token actual;String nombre;Object valor=null;}{
    actual = <CAD>
    {
        System.out.print("Asignacion: "+actual.image+" = ");
        nombre = actual.image;
    }
    <IGUALDAD>(<CAD>|{valor = operaciones();})
    <PUNTOCOMA>
    {
        if(!tabla.buscarVariable(nombre)){
            tabla.setValor(nombre, valor);
        }else{
            System.out.print(" -----La varno ha sido declarada");
        }        
        System.out.println("");
    }
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
    <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<"> 
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FLOTANTE: "float">
    | <FUNCTION: "function">
    | <ENCABEZADO: "use "(["a"-"z","A"-"Z","_","-"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    }

TOKEN [IGNORE_CASE] : {

     <SUMA: "+">
    |<RESTA: "-">
    |<MULT: "*">
    |<DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <DO: "do">
    | <FOR: "for">
    | <IF: ("if")>
    | <ELSE: "else">
    | <SWITCH: "switch">
    | <CASE: "case">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
    | <INC: (<CAD><MM>|<MM><CAD>)>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (mientras()|si()|declaracion()|por()|funcion()|header()|operaciones()|switchcase()|asignacion())+|nada()
	//(mientras()|si()|entero()|siono()|flotant()|por())+|nada()
}

void header() :{}{
    <ENCABEZADO>{System.out.println("Encabezado");}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");}
    |<FLOTANTE>{System.out.print("Flotante");})
}

void mientras() :{}{
{System.out.print("Entrada a ciclo ");}(<DO>{{System.out.print("DO ");}}{System.out.println("WHILE");}<LLA1>(producciones())<LLA2>)?<WHILE>cond()(<LLA1>(producciones())<LLA2>)?{System.out.println("Salida de ciclo WHILE");}    
}

void si() :{}{ 
    {System.out.println("Entra a IF");}
    <IF>cond()<LLA1>(producciones())<LLA2>{System.out.println("Salida de IF.");}(sino())?
}

void cond() : {Token actual; Object variable=null; Object compara=null; String signo="";}{
    <PAR1>((actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);System.out.println(variable);}|actual = <NUM>{variable = actual.image;System.out.println(variable);})(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
                )
            (actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");System.out.println(compara);}|actual = <NUM>{compara = actual.image;System.out.println(compara);})
            {evaluarIF(variable, compara, signo);}
            |("1"{System.out.println("true");}
            |<VERDAD>{System.out.println("true");}))
    <PAR2>
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        switch (signo){
            case "<":
                System.out.print("("+variable+"<"+compara+")");
                if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case ">":
                System.out.print("("+variable+">"+compara+")");
                if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case "==":
                System.out.print("("+variable+"=="+compara+")");
                if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void por() :{}{
{System.out.println("Entrada a ciclo FOR.");}<FOR><PAR1>declaracion()porcond()<PUNTOCOMA><INC><PAR2>(<LLA1>(producciones())<LLA2>)
{System.out.println("Salida de ciclo FOR.");}    
}

void porcond() :{}{
    ((<CAD>|<NUM>)(<EQ>|<DIF>|<MAYIG>|<MENIG>|<MAY>|<MEN>)(<CAD>|<NUM>)|<VERDAD>)
}

void nada() :{}{
    {System.out.println("");}
}

void declaracion() :{Token actual;String nombre;String tipo;Object valor="";}{
    {System.out.print("Declaracion: entero ");}
    <INT> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|{System.out.print(" = ");valor = operaciones();}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <CARACTER>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: flotante ");}
    <FLOTANTE> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <FLOT>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Float", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

int valor() :{Token actual; int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); return Integer.parseInt(actual.image);}
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> num = valor() {total -= num;})* {return total;}
}

void switchcase() : {Token actual; Object variable; Object compara;} {
	<SWITCH>{System.out.println("Entra a switch");}<PAR1>actual = <CAD> {System.out.println("Se compara: "+actual.image+"="+tabla.getValor(actual.image+""));variable = actual.image;variable = tabla.getValor(actual.image+"");}<PAR2><LLA1>(<CASE>(actual = <CAD>{compara = actual.image;}|actual = <FLOTANTE>{compara = actual.image;}|actual = <CARACTER>{compara = actual.image;}|actual = <NUM>{compara = actual.image;evaluarSwitch(variable, compara);})<DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>)+[<DEFA><DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>]<LLA2>
}

void evaluarSwitch(Object variable, Object compara):{} {
    {
        String uno, dos;
        uno = variable+"";
        dos = compara+"";
        System.out.print("\t("+variable+"=="+compara+")");
        if(uno.equals(dos)){
            System.out.println("true");
        }
        else {
            System.out.println("false");
        }
    }
}

void asignacion() : {Token actual;String nombre;Object valor=null;}{
    actual = <CAD>
    {
        System.out.print("Asignacion: "+actual.image+" = ");
        nombre = actual.image;
    }
    <IGUALDAD>(<CAD>|{valor = operaciones();})
    <PUNTOCOMA>
    {
        if(!tabla.buscarVariable(nombre)){
            tabla.setValor(nombre, valor);
        }else{
            System.out.print(" -----La var no ha sido declarada");
        }        
        System.out.println("");
    }
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
    <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<"> 
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FLOTANTE: "float">
    | <FUNCTION: "function">
    | <ENCABEZADO: "use "(["a"-"z","A"-"Z","_","-"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    }

TOKEN [IGNORE_CASE] : {

     <SUMA: "+">
    |<RESTA: "-">
    |<MULT: "*">
    |<DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <DO: "do">
    | <FOR: "for">
    | <IF: ("if")>
    | <ELSE: "else">
    | <SWITCH: "switch">
    | <CASE: "case">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
    | <INC: (<CAD><MM>|<MM><CAD>)>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (mientras()|si()|declaracion()|por()|funcion()|header()|operaciones()|switchcase()|asignacion())+|nada()
	//(mientras()|si()|entero()|siono()|flotant()|por())+|nada()
}

void header() :{}{
    <ENCABEZADO>{System.out.println("Encabezado");}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");}
    |<FLOTANTE>{System.out.print("Flotante");})
}

void mientras() :{}{
{System.out.print("Entrada a ciclo ");}(<DO>{{System.out.print("DO ");}}{System.out.println("WHILE");}<LLA1>(producciones())<LLA2>)?<WHILE>cond()(<LLA1>(producciones())<LLA2>)?{System.out.println("Salida de ciclo WHILE");}    
}

void si() :{}{ 
    {System.out.println("Entra a IF");}
    <IF>cond()<LLA1>(producciones())<LLA2>{System.out.println("Salida de IF.");}(sino())?
}

void cond() : {Token actual; Object variable=null; Object compara=null; String signo="";}{
    <PAR1>((actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);System.out.println(variable);}|actual = <NUM>{variable = actual.image;System.out.println(variable);})(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
                )
            (actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");System.out.println(compara);}|actual = <NUM>{compara = actual.image;System.out.println(compara);})
            {evaluarIF(variable, compara, signo);}
            |("1"{System.out.println("true");}
            |<VERDAD>{System.out.println("true");}))
    <PAR2>
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        switch (signo){
            case "<":
                System.out.print("("+variable+"<"+compara+")");
                if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case ">":
                System.out.print("("+variable+">"+compara+")");
                if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case "==":
                System.out.print("("+variable+"=="+compara+")");
                if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void por() :{}{
{System.out.println("Entrada a ciclo FOR.");}<FOR><PAR1>declaracion()porcond()<PUNTOCOMA><INC><PAR2>(<LLA1>(producciones())<LLA2>)
{System.out.println("Salida de ciclo FOR.");}    
}

void porcond() :{}{
    ((<CAD>|<NUM>)(<EQ>|<DIF>|<MAYIG>|<MENIG>|<MAY>|<MEN>)(<CAD>|<NUM>)|<VERDAD>)
}

void nada() :{}{
    {System.out.println("");}
}

void declaracion() :{Token actual;String nombre;String tipo;Object valor="";}{
    {System.out.print("Declaracion: entero ");}
    <INT> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|{System.out.print(" = ");valor = operaciones();}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <CARACTER>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: flotante ");}
    <FLOTANTE> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <FLOT>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Float", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

int valor() :{Token actual; int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); return Integer.parseInt(actual.image);}
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> num = valor() {total -= num;})* {return total;}
}

void switchcase() : {Token actual; Object variable; Object compara;} {
	<SWITCH>{System.out.println("Entra a switcho");}<PAR1>actual = <CAD> {System.out.println("Se compara: "+actual.image+"="+tabla.getValor(actual.image+""));variable = actual.image;variable = tabla.getValor(actual.image+"");}<PAR2><LLA1>(<CASE>(actual = <CAD>{compara = actual.image;}|actual = <FLOTANTE>{compara = actual.image;}|actual = <CARACTER>{compara = actual.image;}|actual = <NUM>{compara = actual.image;evaluarSwitch(variable, compara);})<DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>)+[<DEFA><DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>]<LLA2>
}

void evaluarSwitch(Object variable, Object compara):{} {
    {
        String uno, dos;
        uno = variable+"";
        dos = compara+"";
        System.out.print("\t("+variable+"=="+compara+")");
        if(uno.equals(dos)){
            System.out.println("true");
        }
        else {
            System.out.println("false");
        }
    }
}

void asignacion() : {Token actual;String nombre;Object valor=null;}{
    actual = <CAD>
    {
        System.out.print("Asignacion: "+actual.image+" = ");
        nombre = actual.image;
    }
    <IGUALDAD>(<CAD>|{valor = operaciones();})
    <PUNTOCOMA>
    {
        if(!tabla.buscarVariable(nombre)){
            tabla.setValor(nombre, valor);
        }else{
            System.out.print(" -----La var no ha sido declarada");
        }        
        System.out.println("");
    }
}
options {
    DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORDDR: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{}{
    <USE>
    actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir("int "+instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )?
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    actual = <NUM> {instruccion+=actual.image;trad.escribirEnLinea(instruccion);System.out.println(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}
options {
    DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORDDR: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{}{
    <USE>
    actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir("int "+instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )?
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    actual = <NUM> {instruccion+=actual.image;trad.escribirEnLinea(instruccion);System.out.println(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}
options {
    /DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORDDR: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{}{
    <USE>
    actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir("int "+instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )?
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    actual = <NUM> {instruccion+=actual.image;trad.escribirEnLinea(instruccion);System.out.println(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORDDR: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{}{
    <USE>
    actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir("int "+instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )?
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    actual = <NUM> {instruccion+=actual.image;trad.escribirEnLinea(instruccion);System.out.println(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORDDR: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{}{
    <USE>
    actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir("int "+instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )?
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    actual = <NUM> {instruccion+=actual.image;trad.escribirEnLinea(instruccion);System.out.println(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}

use avr/io.h
use stdio.h

	int a = 4;
	
	DDRA = 0b00000001;
	PINB = 0b00001000;
	char cter = 'i';
	main(void){
		int e = 0;
		while(a==0){
			if (e<1&e<9){
				e++;
				DDRA = DDRA >> 2;
				PINB = PINB << 5;
			}
		}
	}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORDDR: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{}{
    <USE>
    actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir("int "+instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    cond()
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += variable+signo+compara;trad.escribirEnLinea(variable+signo+compara);}
                {evaluarIF(variable, compara, signo);}
        )?
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORDDR>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    actual = <NUM> {instruccion+=actual.image;trad.escribirEnLinea(instruccion);System.out.println(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <DEF: "def">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <NEGACION: "!">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    | <DELAY: "delay">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <COR1: "[">
    | <COR2: "]">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <COMA: ",">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORBINARIO: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <PB: "PB"(["0"-"7"])>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (delay()|principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{String instruccion="";}{
    (
        <USE>
        actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
        |<DEF>
         actual = <CAD> {instruccion+="#define "+actual.image+" ";}
         <IGUALDAD>
        (
            (
                actual = <CAD> {instruccion+=actual.image;}
                |actual = <NUM>{instruccion+=actual.image;})+
        )
        {trad.escribir(instruccion);}
    )
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void negacion() : {}{
    <PAR1>{trad.escribirEnLinea("(");}
    <NEGACION>{trad.escribirEnLinea("!");}
    (
        cond()
        | condBinaria()
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )*
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void condBinaria():{String instruccion="";}{
    <PAR1>{instruccion+="(";}
    actual = <PIN> {instruccion+=actual.image;}
    (
        <AND> {instruccion+="&";}
        |<OR>{instruccion+="|";}
    )
    <PAR1>{instruccion+="(";trad.escribirEnLinea(instruccion);instruccion="";}
    corrimiento()
    <PAR2>{instruccion+=")";}
    <PAR2>{instruccion+=")";}
    {trad.escribirEnLinea(instruccion);}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        (
            <COR1>{instruccion+=" [] = {";}
            (actual = <VALORBINARIO>{instruccion+=actual.image;}(<COMA>{instruccion+=",";})?)+
            <COR2>{instruccion+="}";}
            |<IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}

    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    )
    {trad.escribirEnLinea(instruccion);}
}

void escribirPuerto():{String instruccion="";}{
    actual = <PORT> {instruccion+=actual.image;}
    <IGUALDAD>{instruccion+="=";}
    (
        actual = <VALORBINARIO>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}
    )
    <PUNTOCOMA>{instruccion+=";";}
    {trad.escribir(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}

void delay():{}{
    <DELAY>
    <PAR1>
    actual = <NUM>
    <PAR2>
    <PUNTOCOMA>
    {trad.escribir("_delay_ms("+actual.image+");");}
}options {
   //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <DEF: "def">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <NEGACION: "!">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    | <DELAY: "delay">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <COR1: "[">
    | <COR2: "]">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <COMA: ",">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORBINARIO: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <PB: "PB"(["0"-"7"])>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (delay()|principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{String instruccion="";}{
    (
        <USE>
        actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
        |<DEF>
         actual = <CAD> {instruccion+="#define "+actual.image+" ";}
         <IGUALDAD>
        (
            (
                actual = <CAD> {instruccion+=actual.image;}
                |actual = <NUM>{instruccion+=actual.image;})+
        )
        {trad.escribir(instruccion);}
    )
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void negacion() : {}{
    <PAR1>{trad.escribirEnLinea("(");}
    <NEGACION>{trad.escribirEnLinea("!");}
    (
        cond()
        | condBinaria()
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )*
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void condBinaria():{String instruccion="";}{
    <PAR1>{instruccion+="(";}
    actual = <PIN> {instruccion+=actual.image;}
    (
        <AND> {instruccion+="&";}
        |<OR>{instruccion+="|";}
    )
    <PAR1>{instruccion+="(";trad.escribirEnLinea(instruccion);instruccion="";}
    corrimiento()
    <PAR2>{instruccion+=")";}
    <PAR2>{instruccion+=")";}
    {trad.escribirEnLinea(instruccion);}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        (
            <COR1>{instruccion+=" [] = {";}
            (actual = <VALORBINARIO>{instruccion+=actual.image;}(<COMA>{instruccion+=",";})?)+
            <COR2>{instruccion+="}";}
            |<IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}

    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    )
    {trad.escribirEnLinea(instruccion);}
}

void escribirPuerto():{String instruccion="";}{
    actual = <PORT> {instruccion+=actual.image;}
    <IGUALDAD>{instruccion+="=";}
    (
        actual = <VALORBINARIO>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}
    )
    <PUNTOCOMA>{instruccion+=";";}
    {trad.escribir(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}

void delay():{}{
    <DELAY>
    <PAR1>
    actual = <NUM>
    <PAR2>
    <PUNTOCOMA>
    {trad.escribir("_delay_ms("+actual.image+");");}
}options {
   /DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <DEF: "def">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <NEGACION: "!">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    | <DELAY: "delay">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <COR1: "[">
    | <COR2: "]">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <COMA: ",">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORBINARIO: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <PB: "PB"(["0"-"7"])>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (delay()|principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{String instruccion="";}{
    (
        <USE>
        actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
        |<DEF>
         actual = <CAD> {instruccion+="#define "+actual.image+" ";}
         <IGUALDAD>
        (
            (
                actual = <CAD> {instruccion+=actual.image;}
                |actual = <NUM>{instruccion+=actual.image;})+
        )
        {trad.escribir(instruccion);}
    )
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void negacion() : {}{
    <PAR1>{trad.escribirEnLinea("(");}
    <NEGACION>{trad.escribirEnLinea("!");}
    (
        cond()
        | condBinaria()
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )*
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void condBinaria():{String instruccion="";}{
    <PAR1>{instruccion+="(";}
    actual = <PIN> {instruccion+=actual.image;}
    (
        <AND> {instruccion+="&";}
        |<OR>{instruccion+="|";}
    )
    <PAR1>{instruccion+="(";trad.escribirEnLinea(instruccion);instruccion="";}
    corrimiento()
    <PAR2>{instruccion+=")";}
    <PAR2>{instruccion+=")";}
    {trad.escribirEnLinea(instruccion);}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        (
            <COR1>{instruccion+=" [] = {";}
            (actual = <VALORBINARIO>{instruccion+=actual.image;}(<COMA>{instruccion+=",";})?)+
            <COR2>{instruccion+="}";}
            |<IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}

    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    )
    {trad.escribirEnLinea(instruccion);}
}

void escribirPuerto():{String instruccion="";}{
    actual = <PORT> {instruccion+=actual.image;}
    <IGUALDAD>{instruccion+="=";}
    (
        actual = <VALORBINARIO>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}
    )
    <PUNTOCOMA>{instruccion+=";";}
    {trad.escribir(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}

void delay():{}{
    <DELAY>
    <PAR1>
    actual = <NUM>
    <PAR2>
    <PUNTOCOMA>
    {trad.escribir("_delay_ms("+actual.image+");");}
}options {
   DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <DEF: "def">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <NEGACION: "!">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    | <DELAY: "delay">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <COR1: "[">
    | <COR2: "]">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <COMA: ",">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORBINARIO: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <PB: "PB"(["0"-"7"])>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (delay()|principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{String instruccion="";}{
    (
        <USE>
        actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
        |<DEF>
         actual = <CAD> {instruccion+="#define "+actual.image+" ";}
         <IGUALDAD>
        (
            (
                actual = <CAD> {instruccion+=actual.image;}
                |actual = <NUM>{instruccion+=actual.image;})+
        )
        {trad.escribir(instruccion);}
    )
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void negacion() : {}{
    <PAR1>{trad.escribirEnLinea("(");}
    <NEGACION>{trad.escribirEnLinea("!");}
    (
        cond()
        | condBinaria()
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )*
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void condBinaria():{String instruccion="";}{
    <PAR1>{instruccion+="(";}
    actual = <PIN> {instruccion+=actual.image;}
    (
        <AND> {instruccion+="&";}
        |<OR>{instruccion+="|";}
    )
    <PAR1>{instruccion+="(";trad.escribirEnLinea(instruccion);instruccion="";}
    corrimiento()
    <PAR2>{instruccion+=")";}
    <PAR2>{instruccion+=")";}
    {trad.escribirEnLinea(instruccion);}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        (
            <COR1>{instruccion+=" [] = {";}
            (actual = <VALORBINARIO>{instruccion+=actual.image;}(<COMA>{instruccion+=",";})?)+
            <COR2>{instruccion+="}";}
            |<IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}

    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    )
    {trad.escribirEnLinea(instruccion);}
}

void escribirPuerto():{String instruccion="";}{
    actual = <PORT> {instruccion+=actual.image;}
    <IGUALDAD>{instruccion+="=";}
    (
        actual = <VALORBINARIO>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}
    )
    <PUNTOCOMA>{instruccion+=";";}
    {trad.escribir(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}

void delay():{}{
    <DELAY>
    <PAR1>
    actual = <NUM>
    <PAR2>
    <PUNTOCOMA>
    {trad.escribir("_delay_ms("+actual.image+");");}
}options {
   DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <DEF: "def">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <NEGACION: "!">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    | <DELAY: "delay">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <COR1: "[">
    | <COR2: "]">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <COMA: ",">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORBINARIO: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <PB: "PB"(["0"-"7"])>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (delay()|principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{String instruccion="";}{
    (
        <USE>
        actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
        |<DEF>
         actual = <CAD> {instruccion+="#define "+actual.image+" ";}
         <IGUALDAD>
        (
            (
                actual = <CAD> {instruccion+=actual.image;}
                |actual = <NUM>{instruccion+=actual.image;})+
        )
        {trad.escribir(instruccion);}
    )
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void negacion() : {}{
    <PAR1>{trad.escribirEnLinea("(");}
    <NEGACION>{trad.escribirEnLinea("!");}
    (
        cond()
        | condBinaria()
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )*
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void condBinaria():{String instruccion="";}{
    <PAR1>{instruccion+="(";}
    actual = <PIN> {instruccion+=actual.image;}
    (
        <AND> {instruccion+="&";}
        |<OR>{instruccion+="|";}
    )
    <PAR1>{instruccion+="(";trad.escribirEnLinea(instruccion);instruccion="";}
    corrimiento()
    <PAR2>{instruccion+=")";}
    <PAR2>{instruccion+=")";}
    {trad.escribirEnLinea(instruccion);}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        (
            <COR1>{instruccion+=" [] = {";}
            (actual = <VALORBINARIO>{instruccion+=actual.image;}(<COMA>{instruccion+=",";})?)+
            <COR2>{instruccion+="}";}
            |<IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}

    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    )
    {trad.escribirEnLinea(instruccion);}
}

void escribirPuerto():{String instruccion="";}{
    actual = <PORT> {instruccion+=actual.image;}
    <IGUALDAD>{instruccion+="=";}
    (
        actual = <VALORBINARIO>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}
    )
    <PUNTOCOMA>{instruccion+=";";}
    {trad.escribir(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}

void delay():{}{
    <DELAY>
    <PAR1>
    actual = <NUM>
    <PAR2>
    <PUNTOCOMA>
    {trad.escribir("_delay_ms("+actual.image+");");}
}options {
    DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <DEF: "def">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <NEGACION: "!">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    | <DELAY: "delay">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <COR1: "[">
    | <COR2: "]">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <COMA: ",">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORBINARIO: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <PB: "PB"(["0"-"7"])>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (delay()|principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{String instruccion="";}{
    (
        <USE>
        actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
        |<DEF>
         actual = <CAD> {instruccion+="#define "+actual.image+" ";}
         <IGUALDAD>
        (
            (
                actual = <CAD> {instruccion+=actual.image;}
                |actual = <NUM>{instruccion+=actual.image;})+
        )
        {trad.escribir(instruccion);}
    )
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void negacion() : {}{
    <PAR1>{trad.escribirEnLinea("(");}
    <NEGACION>{trad.escribirEnLinea("!");}
    (
        cond()
        | condBinaria()
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )*
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void condBinaria():{String instruccion="";}{
    <PAR1>{instruccion+="(";}
    actual = <PIN> {instruccion+=actual.image;}
    (
        <AND> {instruccion+="&";}
        |<OR>{instruccion+="|";}
    )
    <PAR1>{instruccion+="(";trad.escribirEnLinea(instruccion);instruccion="";}
    corrimiento()
    <PAR2>{instruccion+=")";}
    <PAR2>{instruccion+=")";}
    {trad.escribirEnLinea(instruccion);}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        (
            <COR1>{instruccion+=" [] = {";}
            (actual = <VALORBINARIO>{instruccion+=actual.image;}(<COMA>{instruccion+=",";})?)+
            <COR2>{instruccion+="}";}
            |<IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}

    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    )
    {trad.escribirEnLinea(instruccion);}
}

void escribirPuerto():{String instruccion="";}{
    actual = <PORT> {instruccion+=actual.image;}
    <IGUALDAD>{instruccion+="=";}
    (
        actual = <VALORBINARIO>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}
    )
    <PUNTOCOMA>{instruccion+=";";}
    {trad.escribir(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}

void delay():{}{
    <DELAY>
    <PAR1>
    actual = <NUM>
    <PAR2>
    <PUNTOCOMA>
    {trad.escribir("_delay_ms("+actual.image+");");}
}options {
    /DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <DEF: "def">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <NEGACION: "!">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    | <DELAY: "delay">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <COR1: "[">
    | <COR2: "]">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <COMA: ",">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORBINARIO: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <PB: "PB"(["0"-"7"])>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (delay()|principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{String instruccion="";}{
    (
        <USE>
        actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
        |<DEF>
         actual = <CAD> {instruccion+="#define "+actual.image+" ";}
         <IGUALDAD>
        (
            (
                actual = <CAD> {instruccion+=actual.image;}
                |actual = <NUM>{instruccion+=actual.image;})+
        )
        {trad.escribir(instruccion);}
    )
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void negacion() : {}{
    <PAR1>{trad.escribirEnLinea("(");}
    <NEGACION>{trad.escribirEnLinea("!");}
    (
        cond()
        | condBinaria()
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )*
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void condBinaria():{String instruccion="";}{
    <PAR1>{instruccion+="(";}
    actual = <PIN> {instruccion+=actual.image;}
    (
        <AND> {instruccion+="&";}
        |<OR>{instruccion+="|";}
    )
    <PAR1>{instruccion+="(";trad.escribirEnLinea(instruccion);instruccion="";}
    corrimiento()
    <PAR2>{instruccion+=")";}
    <PAR2>{instruccion+=")";}
    {trad.escribirEnLinea(instruccion);}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        (
            <COR1>{instruccion+=" [] = {";}
            (actual = <VALORBINARIO>{instruccion+=actual.image;}(<COMA>{instruccion+=",";})?)+
            <COR2>{instruccion+="}";}
            |<IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}

    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    )
    {trad.escribirEnLinea(instruccion);}
}

void escribirPuerto():{String instruccion="";}{
    actual = <PORT> {instruccion+=actual.image;}
    <IGUALDAD>{instruccion+="=";}
    (
        actual = <VALORBINARIO>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}
    )
    <PUNTOCOMA>{instruccion+=";";}
    {trad.escribir(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}

void delay():{}{
    <DELAY>
    <PAR1>
    actual = <NUM>
    <PAR2>
    <PUNTOCOMA>
    {trad.escribir("_delay_ms("+actual.image+");");}
}def F_CPU=16000000UL
use avr/io.h
use stdio.h

char cter = 'i';
main(void){
	DDRB = 0b00000001;
	DDRD = 0b00000011;
	char luces [0b00000001 , 0b00000010 , 0b00000100];

	while(true){
		PORTD = luces [ 0 ];
		delay( 200 );
		PORTD = luces [ 1 ];
		delay( 200 );
		PORTD = luces [ 2 ];
		delay( 200 );

		if(!(PINB & (1<<PB1))){
			PORTB = 0b00000001;
		}else{
			PORTB = 0b00000000;
		}
	}
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <DEF: "def">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <NEGACION: "!">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    | <DELAY: "delay">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <COR1: "[">
    | <COR2: "]">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <COMA: ",">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORBINARIO: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <PB: "PB"(["0"-"7"])>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (delay()|principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{String instruccion="";}{
    (
        <USE>
        actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
        |<DEF>
         actual = <CAD> {instruccion+="#define "+actual.image+" ";}
         <IGUALDAD>
        (
            (
                actual = <CAD> {instruccion+=actual.image;}
                |actual = <NUM>{instruccion+=actual.image;})+
        )
        {trad.escribir(instruccion);}
    )
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void negacion() : {}{
    <PAR1>{trad.escribirEnLinea("(");}
    <NEGACION>{trad.escribirEnLinea("!");}
    (
        cond()
        | condBinaria()
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )*
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void condBinaria():{String instruccion="";}{
    <PAR1>{instruccion+="(";}
    actual = <PIN> {instruccion+=actual.image;}
    (
        <AND> {instruccion+="&";}
        |<OR>{instruccion+="|";}
    )
    <PAR1>{instruccion+="(";trad.escribirEnLinea(instruccion);instruccion="";}
    corrimiento()
    <PAR2>{instruccion+=")";}
    <PAR2>{instruccion+=")";}
    {trad.escribirEnLinea(instruccion);}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        (
            <COR1>{instruccion+=" [] = {";}
            (actual = <VALORBINARIO>{instruccion+=actual.image;}(<COMA>{instruccion+=",";})?)+
            <COR2>{instruccion+="}";}
            |<IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}

    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    )
    {trad.escribirEnLinea(instruccion);}
}

void escribirPuerto():{String instruccion="";}{
    actual = <PORT> {instruccion+=actual.image;}
    <IGUALDAD>{instruccion+="=";}
    (
        actual = <VALORBINARIO>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}
    )
    <PUNTOCOMA>{instruccion+=";";}
    {trad.escribir(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}

void delay():{}{
    <DELAY>
    <PAR1>
    actual = <NUM>
    <PAR2>
    <PUNTOCOMA>
    {trad.escribir("_delay_ms("+actual.image+");");}
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <DEF: "def">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <NEGACION: "!">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    | <DELAY: "delay">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <COR1: "[">
    | <COR2: "]">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <COMA: ",">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORBINARIO: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <PB: "PB"(["0"-"7"])>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (delay()|principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{String instruccion="";}{
    (
        <USE>
        actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
        |<DEF>
         actual = <CAD> {instruccion+="#define "+actual.image+" ";}
         <IGUALDAD>
        (
            (
                actual = <CAD> {instruccion+=actual.image;}
                |actual = <NUM>{instruccion+=actual.image;})+
        )
        {trad.escribir(instruccion);}
    )
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void negacion() : {}{
    <PAR1>{trad.escribirEnLinea("(");}
    <NEGACION>{trad.escribirEnLinea("!");}
    (
        cond()
        | condBinaria()
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )*
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void condBinaria():{String instruccion="";}{
    <PAR1>{instruccion+="(";}
    actual = <PIN> {instruccion+=actual.image;}
    (
        <AND> {instruccion+="&";}
        |<OR>{instruccion+="|";}
    )
    <PAR1>{instruccion+="(";trad.escribirEnLinea(instruccion);instruccion="";}
    corrimiento()
    <PAR2>{instruccion+=")";}
    <PAR2>{instruccion+=")";}
    {trad.escribirEnLinea(instruccion);}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        (
            <COR1>{instruccion+=" [] = {";}
            (actual = <VALORBINARIO>{instruccion+=actual.image;}(<COMA>{instruccion+=",";})?)+
            <COR2>{instruccion+="}";}
            |<IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}

    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    )
    {trad.escribirEnLinea(instruccion);}
}

void escribirPuerto():{String instruccion="";}{
    actual = <PORT> {instruccion+=actual.image;}
    <IGUALDAD>{instruccion+="=";}
    (
        actual = <VALORBINARIO>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}
    )
    <PUNTOCOMA>{instruccion+=";";}
    {trad.escribir(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}

void delay():{}{
    <DELAY>
    <PAR1>
    actual = <NUM>
    <PAR2>
    <PUNTOCOMA>
    {trad.escribir("_delay_ms("+actual.image+");");}
}
options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    private static Traductor trad = new Traductor();
    private static Token actual;
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
     <IF: "if">
    | <ELSE: "else">
    | <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<">
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FUNCTION: "function">
    | <USE: "use">
    | <DEF: "def">
    | <ENCABEZADO: (["a"-"z","A"-"Z","_","-","/"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    | <AND: "&">
    | <OR: "|">
    | <NEGACION: "!">
    | <LEFTSHIFT: "<<">
    | <RIGHTSHIFT: ">>">
    | <DELAY: "delay">
    }

TOKEN [IGNORE_CASE] : {

      <SUMA: "+">
    | <RESTA: "-">
    | <MULT: "*">
    | <DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <MAIN: "main(void)">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <COR1: "[">
    | <COR2: "]">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <COMA: ",">
    | <DDR: "DDR"("A"|"B"|"C"|"D")>
    | <VALORBINARIO: ("0b"("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1")("0"|"1"))>
    | <PORT: "PORT"("A"|"B"|"C"|"D")>
    | <PIN: "PIN"("A"|"B"|"C"|"D")>
    | <PB: "PB"(["0"-"7"])>
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (delay()|principal()|si()|mientras()|declaracion()|funcion()|header()|operaciones()|asignacion())+
}

void header() :{String instruccion="";}{
    (
        <USE>
        actual = <ENCABEZADO>{System.out.println("Encabezado");trad.escribir("#include <"+actual.image+">");}
        |<DEF>
         actual = <CAD> {instruccion+="#define "+actual.image+" ";}
         <IGUALDAD>
        (
            (
                actual = <CAD> {instruccion+=actual.image;}
                |actual = <NUM>{instruccion+=actual.image;})+
        )
        {trad.escribir(instruccion);}
    )
}

void principal() : {String instruccion="";}{
    <MAIN> {instruccion +="int main(void)";}{System.out.println("Entra a main");}
    actual = <LLA1>{instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir("return 0;\n"+instruccion);}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");})
}

void si() : {String instruccion="";}{
    
    <IF>{trad.escribirEnLinea("if");System.out.print("Entrada a if");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);System.out.println("Salida de if");}
    (sino())?    
}

void mientras() :{String instruccion="";}{
    <WHILE>{trad.escribirEnLinea("while");System.out.print("Entrada a ciclo while");}
    (
        cond()
        |negacion()
        |condBinaria()
    )
    actual = <LLA1> {instruccion +=actual.image;}{trad.escribir(instruccion);instruccion="";}
    producciones()
    actual = <LLA2> {instruccion +=actual.image;}
    {trad.escribir(instruccion);}
    {System.out.println("Salida de ciclo WHILE");}    
}

void negacion() : {}{
    <PAR1>{trad.escribirEnLinea("(");}
    <NEGACION>{trad.escribirEnLinea("!");}
    (
        cond()
        | condBinaria()
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void cond() : { Object variable=null; Object compara=null; String signo="";String instruccion="";}{
    <PAR1>{trad.escribirEnLinea("(");}
    (
        (
            (
                actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )(
            (
            (<AND>{trad.escribirEnLinea("&");}|<OR>{trad.escribirEnLinea("|");})
            actual = <CAD> {variable = actual.image;instruccion+=variable;variable = tabla.getValor(actual.image);}
                |actual = <NUM>{variable = actual.image;}
            )(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
            )(
                actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");}
                |actual = <NUM>{compara = actual.image;}
            )
                {instruccion += signo+compara;trad.escribirEnLinea(instruccion);}
                {evaluarIF(variable, compara, signo);}
        )*
            |<VERDAD>{System.out.println("true");trad.escribirEnLinea("true");}
    )
    <PAR2>{trad.escribirEnLinea(")");}
}

void condBinaria():{String instruccion="";}{
    <PAR1>{instruccion+="(";}
    actual = <PIN> {instruccion+=actual.image;}
    (
        <AND> {instruccion+="&";}
        |<OR>{instruccion+="|";}
    )
    <PAR1>{instruccion+="(";trad.escribirEnLinea(instruccion);instruccion="";}
    corrimiento()
    <PAR2>{instruccion+=")";}
    <PAR2>{instruccion+=")";}
    {trad.escribirEnLinea(instruccion);}
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        if (variable==null|compara==null){
            System.out.println("Error: variable no declarada.");
        }
        else {
            switch (signo){
                case "<":
                    System.out.print("("+variable+"<"+compara+")");
                    if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case ">":
                    System.out.print("("+variable+">"+compara+")");
                    if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
                case "==":
                    System.out.print("("+variable+"=="+compara+")");
                    if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                        System.out.println("->"+true);
                    }
                    else {
                        System.out.println("->"+false);
                    }
                    break;
            }
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void declaracion() :{String nombre, instruccion="";String tipo;Object valor="";}{
    
    {System.out.print("Declaracion: entero ");}
    <INT>{instruccion += "int ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        <IGUALDAD>{instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |{System.out.print(" = ");valor = operaciones();}
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR>{instruccion += "char ";}
    actual = <CAD>{nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    (
        (
            <COR1>{instruccion+=" [] = {";}
            (actual = <VALORBINARIO>{instruccion+=actual.image;}(<COMA>{instruccion+=",";})?)+
            <COR2>{instruccion+="}";}
            |<IGUALDAD>{instruccion += " = ";}
        (
            actual = <CAD>{System.out.print(", "+actual.image);instruccion += actual.image;}
            |actual = <CARACTER>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        )
        )
    )*
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{nombre = actual.image;System.out.print(nombre);}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: DDR ");}
    actual = <DDR> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "DDR", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PORT ");}
    actual = <PORT> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}

    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PORT", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: PIN ");}
    actual = <PIN> {nombre = actual.image;System.out.print(nombre);instruccion += nombre;}
    <IGUALDAD> {instruccion += " =";trad.escribirEnLinea(instruccion);instruccion="";}
    (
        actual = <VALORBINARIO>{valor = actual.image;System.out.print(" = "+valor);instruccion += valor;}
        |corrimiento()
    )
    {System.out.println("");}
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "PIN", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

void asignacion() : {String nombre, instruccion="";Object valor=null;}{
    actual = <CAD>
    {
        nombre = actual.image; // Identificar el nombre del token (variable)
        System.out.print("Asignacion: "+nombre+" = "); // Imprimirlo
        instruccion += nombre;
    }
    (    
        <IGUALDAD> {instruccion += " = ";trad.escribirEnLinea(instruccion);instruccion="";}
        (
            actual = <CAD> {instruccion += actual.image;trad.escribirEnLinea(", "+instruccion);instruccion="";}
            |{valor = operaciones();}
        ) // Obtener nuevo valor de la variable
        |<MM>
            {   instruccion+="++";
                if(!tabla.buscarVariable(nombre)){ 
                    valor = tabla.getValor(nombre);
                    int val = (int)valor + 1;
                    valor = (Object)val;
                }else{
                    System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
                }
            }
    )
    actual = <PUNTOCOMA>{instruccion += actual.image;trad.escribir(instruccion);}    
    {
        if(!tabla.buscarVariable(nombre)){ // Buscar si la variable existe en la tabla
            tabla.setValor(nombre, valor); // TRUE -> Modificar el valor de la variable
        }else{
            System.out.print(" -----La variable no ha sido declarada"); // FALSE -> Aviso
        }        
        System.out.println("");
    }
}

void corrimiento ():{String instruccion="";}{
    {System.out.print("Corrimiento a la ");}
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    ) 
    (
        actual = <LEFTSHIFT> {instruccion+=actual.image;System.out.println("izquierda.");}
        | actual = <RIGHTSHIFT>{instruccion+=actual.image;System.out.println("derecha");}
    )
    (
        actual = <DDR>{instruccion+=actual.image;}
        |actual = <PIN>{instruccion+=actual.image;}
        |actual = <PORT>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;}
        |actual = <NUM>{instruccion+=actual.image;}
        |actual = <PB>{instruccion+=actual.image;}
    )
    {trad.escribirEnLinea(instruccion);}
}

void escribirPuerto():{String instruccion="";}{
    actual = <PORT> {instruccion+=actual.image;}
    <IGUALDAD>{instruccion+="=";}
    (
        actual = <VALORBINARIO>{instruccion+=actual.image;}
        |actual = <CAD>{instruccion+=actual.image;} <COR1> actual = <NUM> <COR2>{instruccion+="["+actual.image+"]";}
    )
    <PUNTOCOMA>{instruccion+=";";}
    {trad.escribir(instruccion);}
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> {trad.escribirEnLinea("+");} num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> {trad.escribirEnLinea("+");} num = valor() {total -= num;})* {return total;}
}

int valor() :{ int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); trad.escribirEnLinea(actual.image);return Integer.parseInt(actual.image);}
}

void delay():{}{
    <DELAY>
    <PAR1>
    actual = <NUM>
    <PAR2>
    <PUNTOCOMA>
    {trad.escribir("_delay_ms("+actual.image+");");}
}
def F_CPU=16000000UL
use avr/io.h
use stdio.h

main(void){
	DDRB = 0b00000001;
	DDRD = 0b00000111;
	char luces [0b00000001 , 0b00000010 , 0b00000100];

	while(true){
		PORTD = luces [ 0 ];
		delay( 200 );
		PORTD = luces [ 1 ];
		delay( 200 );
		PORTD = luces [ 2 ];
		delay( 200 );

		if(!(PINB & (1<<PB1))){
			PORTB = 0b00000001;
		}else{
			PORTB = 0b00000000;
		}
	}
}
def F_CPU=16000000UL
use avr/io.h
use stdio.h

main(void){
	DDRB = 0b00000001;
	DDRD = 0b00000111;
	char luces [0b00000001 , 0b00000010 , 0b00000100];

	while(true){
		PORTD = luces [ 0 ];
		delay( 200 );
		PORTD = luces [ 1 ];
		delay( 200 );
		PORTD = luces [ 2 ];
		delay( 200 );

		if(!(PINB & (1<<PB1))){
			PORTB = 0b00000001;
		}else{
			PORTB = 0b00000000;
		}
	}
}
def F_CPU=16000000UL
use avr/io.h
use stdio.h

main(void){
	DDRB = 0b00000001;
	DDRD = 0b00000111;
	char luces [0b00000001 , 0b00000010 , 0b00000100];

	while(true){
		PORTD = luces [ 0 ];
		delay( 200 );
		PORTD = luces [ 1 ];
		delay( 200 );
		PORTD = luces [ 2 ];
		delay( 200 );

		if(!(PINB & (1<<PB1))){
			PORTB = 0b00000001;
		}else{
			PORTB = 0b00000000;
		}
	}
}
def F_CPU=16000000UL
use avr/io.h
use stdio.h

main(void){
	DDRB = 0b00000001;
	DDRD = 0b00000111;
	char luces [0b00000001 , 0b00000010 , 0b00000100];

	while(true){
		PORTD = luces [ 0 ];
		delay( 200 );
		PORTD = luces [ 1 ];
		delay( 200 );
		PORTD = luces [ 2 ];
		delay( 200 );

		if(!(PINB & (1<<PB1))){
			PORTB = 0b00000001;
		}else{
			PORTB = 0b00000000;
		}
	}
}
def F_CPU=16000000UL
use avr/io.h
use stdio.h

char cter = 'i';
main(void){
	DDRB = 0b00000001;
	DDRD = 0b00000011;
	char luces [0b00000001 , 0b00000010 , 0b00000100];

	while(true){
		PORTD = luces [ 0 ];
		delay( 200 );
		PORTD = luces [ 1 ];
		delay( 200 );
		PORTD = luces [ 2 ];
		delay( 200 );

		if(!(PINB & (1<<PB1))){
			PORTB = 0b00000001;
		}else{
			PORTB = 0b00000000;
		}
	}
}
