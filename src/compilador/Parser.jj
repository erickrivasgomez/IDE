options {
    //DEBUG_PARSER = true;
    LOOKAHEAD=2;
}
PARSER_BEGIN(Parser)
public class Parser{
    private static TablaSimbolos tabla = new TablaSimbolos();
    public static void main(String args[]) throws ParseException {
        Parser miParser = new Parser(System.in);
        miParser.inicio();
        tabla.imprimirTabla();
    }
}
PARSER_END(Parser)
SKIP :{
	"b Â¯& "
	| "\t"
	| "\n"
	| "\r"
    | " "
}
SPECIAL_TOKEN[IGNORE_CASE] : {
	<COMENTARIO: "//" (~["\n","\r"])* ("\n"|"\r"|"\n\r")> {System.out.println("Comentario");}
    | <RETURN: "return"> {System.out.println("RETURN");}
}
TOKEN [IGNORE_CASE] : {
    <VERDAD: "true">
    | <FALSO: "false">
    | <APOSTRO: "'">
    | <EQ: "==">  
	| <DIF: "!="> 
	| <MAYIG: ">="> 
	| <MENIG: "<=">
	| <MAY: ">"> 
    | <MEN: "<"> 
    | <INT: "int">
    | <CAR: "char">
	| <BOOL: "boolean">
    | <FLOTANTE: "float">
    | <FUNCTION: "function">
    | <ENCABEZADO: "use "(["a"-"z","A"-"Z","_","-"])+".h">
    | <BREAK: "break">
    | <DEFA: "default">
    }

TOKEN [IGNORE_CASE] : {

     <SUMA: "+">
    |<RESTA: "-">
    |<MULT: "*">
    |<DIVISION: "/">
    | <IGUALDAD: "=">
	
    | <DO: "do">
    | <FOR: "for">
    | <IF: ("if")>
    | <ELSE: "else">
    | <SWITCH: "switch">
    | <CASE: "case">
    | <PAR1: "(">
    | <PAR2: ")">  
    | <LLA1: "{">
    | <LLA2: "}">
    | <WHILE: "while">
    | <DOSPUNTOS: ":">
    | <PUNTOCOMA: ";">
    | <CARACTER: <APOSTRO>(["a"-"z","A"-"Z"]|["0"-"9"])<APOSTRO>>
    | <FLOT: ("+"|"-")?(["0"-"9"])*"."(["0"-"9"])+("e"("+"|"-")(["0"-"9"])+)?>
    | <NUM: (["0"-"9"])+>
    | <CAD: (["a"-"z","A"-"Z","_","-"])+>
    | <MM : ("++")>
    | <INC: (<CAD><MM>|<MM><CAD>)>
     
}

void inicio() : {} {
	(producciones()) <EOF>
}

void producciones() : {}{
     (mientras()|si()|declaracion()|por()|funcion()|header()|operaciones()|switchcase()|asignacion())+|nada()
	//(mientras()|si()|entero()|siono()|flotant()|por())+|nada()
}

void header() :{}{
    <ENCABEZADO>{System.out.println("Encabezado");}
}

void tipo() : {}{
    (<INT>{System.out.print("Entero");}
    |<CAR>{System.out.print("Caracter");}
    |<BOOL>{System.out.print("Booleano");}
    |<FLOTANTE>{System.out.print("Flotante");})
}

void mientras() :{}{
{System.out.print("Entrada a ciclo ");}(<DO>{{System.out.print("DO ");}}{System.out.println("WHILE");}<LLA1>(producciones())<LLA2>)?<WHILE>cond()(<LLA1>(producciones())<LLA2>)?{System.out.println("Salida de ciclo WHILE");}    
}

void si() :{}{ 
    {System.out.println("Entra a IF");}
    <IF>cond()<LLA1>(producciones())<LLA2>{System.out.println("Salida de IF.");}(sino())?
}

void cond() : {Token actual; Object variable=null; Object compara=null; String signo="";}{
    <PAR1>((actual = <CAD> {variable = actual.image;variable = tabla.getValor(actual.image);System.out.println(variable);}|actual = <NUM>{variable = actual.image;System.out.println(variable);})(
                actual = <EQ> {signo = actual.image+"";}
                |actual = <DIF> {signo = actual.image;}
                |actual = <MAYIG>{signo = actual.image;}
                |actual = <MENIG>{signo = actual.image;}
                |actual = <MAY>{signo = actual.image;}
                |actual = <MEN>{signo = actual.image;}
                )
            (actual = <CAD>{compara = actual.image;compara = tabla.getValor(actual.image+"");System.out.println(compara);}|actual = <NUM>{compara = actual.image;System.out.println(compara);})
            {evaluarIF(variable, compara, signo);}
            |("1"{System.out.println("true");}
            |<VERDAD>{System.out.println("true");}))
    <PAR2>
}

void evaluarIF(Object variable, Object compara, String signo) : {} {
    {
        switch (signo){
            case "<":
                System.out.print("("+variable+"<"+compara+")");
                if (Integer.parseInt(variable+"")<Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case ">":
                System.out.print("("+variable+">"+compara+")");
                if (Integer.parseInt(variable+"")>Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
            case "==":
                System.out.print("("+variable+"=="+compara+")");
                if (Integer.parseInt(variable+"")==Integer.parseInt(compara+"")){
                    System.out.println("->"+true);
                }
                else {
                    System.out.println("->"+false);
                }
                break;
        }
    }
}

void sino() :{}{
    {System.out.print("Entrada a ELSE ");}<ELSE>({System.out.println("IF");}si())?{System.out.println("");}(<LLA1>(producciones())<LLA2>{System.out.println("Salida de ELSE.");})?
}

void por() :{}{
{System.out.println("Entrada a ciclo FOR.");}<FOR><PAR1>declaracion()porcond()<PUNTOCOMA><INC><PAR2>(<LLA1>(producciones())<LLA2>)
{System.out.println("Salida de ciclo FOR.");}    
}

void porcond() :{}{
    ((<CAD>|<NUM>)(<EQ>|<DIF>|<MAYIG>|<MENIG>|<MAY>|<MEN>)(<CAD>|<NUM>)|<VERDAD>)
}

void nada() :{}{
    {System.out.println("");}
}

void declaracion() :{Token actual;String nombre;String tipo;Object valor="";}{
    {System.out.print("Declaracion: entero ");}
    <INT> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|{System.out.print(" = ");valor = operaciones();}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Entero", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }

    |{System.out.print("Declaracion: char ");}
    <CAR> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <CARACTER>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Char", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: boolean ");}
    <BOOL> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <VERDAD>{System.out.print(" = "+actual.image);valor = actual.image;}|actual = <FALSO>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Boolean", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
    
    |{System.out.print("Declaracion: flotante ");}
    <FLOTANTE> actual = <CAD>{System.out.print(actual.image);nombre = actual.image;}(<IGUALDAD>(actual = <CAD>{System.out.print(", "+actual.image);}|actual = <FLOT>{System.out.print(" = "+actual.image);valor = actual.image;}))*{System.out.println("");}<PUNTOCOMA>
    {
        if(tabla.buscarVariable(nombre)){
            tabla.insertarVariable(nombre, "Float", valor);
        }else{
            System.out.println("-----La variable ya fue declarada");
        }
    }
}

int valor() :{Token actual; int num;}{
    actual = <NUM>{System.out.print(" "+actual.image); return Integer.parseInt(actual.image);}
}

void funcion() :{}{
    <FUNCTION>{System.out.print("Funcion tipo: ");}<CAD><PAR1><PAR2><DOSPUNTOS>tipo(){System.out.println("");}<LLA1>producciones()valor()<PUNTOCOMA>{System.out.println("Salida de funcion");}<LLA2>
}

int operaciones() :{int num;}{
    num = sumar() {return num;}
    | num = restar() {return num;}
}

int sumar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" +");}
    <SUMA> num = valor() {total += num;})* {return total;}
}

int restar() : {int total; int num;}{
    total = valor()
    ({System.out.print(" -");}
    <RESTA> num = valor() {total -= num;})* {return total;}
}

void switchcase() : {Token actual; Object variable; Object compara;} {
	<SWITCH>{System.out.println("Entra a switch");}<PAR1>actual = <CAD> {System.out.println("Se compara: "+actual.image+"="+tabla.getValor(actual.image+""));variable = actual.image;variable = tabla.getValor(actual.image+"");}<PAR2><LLA1>(<CASE>(actual = <CAD>{compara = actual.image;}|actual = <FLOTANTE>{compara = actual.image;}|actual = <CARACTER>{compara = actual.image;}|actual = <NUM>{compara = actual.image;evaluarSwitch(variable, compara);})<DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>)+[<DEFA><DOSPUNTOS>(producciones())<BREAK><PUNTOCOMA>]<LLA2>
}

void evaluarSwitch(Object variable, Object compara):{} {
    {
        String uno, dos;
        uno = variable+"";
        dos = compara+"";
        System.out.print("\t("+variable+"=="+compara+")");
        if(uno.equals(dos)){
            System.out.println("true");
        }
        else {
            System.out.println("false");
        }
    }
}

void asignacion() : {Token actual;String nombre;Object valor=null;}{
    actual = <CAD>
    {
        System.out.print("Asignacion: "+actual.image+" = ");
        nombre = actual.image;
    }
    <IGUALDAD>(<CAD>|{valor = operaciones();})
    <PUNTOCOMA>
    {
        if(!tabla.buscarVariable(nombre)){
            tabla.setValor(nombre, valor);
        }else{
            System.out.print(" -----La variable no ha sido declarada");
        }        
        System.out.println("");
    }
}